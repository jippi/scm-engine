name: build

on:
  push:
    branches:
      - "main"

  pull_request:
    paths:
      - "go.*"
      - "**/*.go"
      - "Taskfile.yml"
      - "Dockerfile.release"
      - ".github/workflows/*.yml"

permissions:
  contents: read

jobs:
  # ------------------------------

  govulncheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: setup
        run: task setup

      - name: install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: run govulncheck
        run: govulncheck ./...

  # ------------------------------

  semgrep:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          repository: dgryski/semgrep-go
          path: rules

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: semgrep
        run: semgrep scan --error --enable-nosem -f ./rules .

  # ------------------------------

  test:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - uses: docker/setup-qemu-action@v3

      # - uses: docker/setup-buildx-action@v3

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: setup-tparse
        run: go install github.com/mfridman/tparse@latest

      - uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: setup
        run: |
          task setup
          task build

      - name: test
        run: ./scripts/test.sh

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Ensure scm-engine binary work
        run: ./scm-engine -h

      - name: Test scm-engine against test GitLab project
        run: ./scm-engine evaluate 1
        env:
          SCM_ENGINE_CONFIG_FILE: ".scm-engine.example.yml"
          SCM_ENGINE_TOKEN: "${{ secrets.GITLAB_INTEGRATION_TEST_API_TOKEN }}"
          GITLAB_PROJECT: "jippi/scm-engine-schema-test"
          GITLAB_BASEURL: https://gitlab.com/

      - name: Show any diff that may be in the project
        run: git diff
