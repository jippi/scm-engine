# See: https://getbootstrap.com/docs/5.3/customize/color/#all-colors

actions:
  - name: Warn that the ticket if older than 30 days
    if: |
      // ignore MRs already closed
      merge_request.state != "closed"
      // if last commit happened more than 30 days ago
      && merge_request.time_since_last_commit > duration("30d")
      // but still less than 45 days ago (where we close the MR)
      && merge_request.time_since_last_commit < duration("45d")
      // and the label to disable this feature is not on the MR
      && not merge_request.has_label("do-not-close")
    then:
      - action: comment
        message: |
          Hello!

          This Merge Request have not seen any commit activity for 30 days. In an effort to keep our project clean we will automatically close the Merge request after 45 days.

          You can add the "do-not-close" label to the Merge Request to disable this behavior.

  - name: Close ticket if older than 45 days
    if: |
      merge_request.state != "closed"
      && merge_request.time_since_last_commit > duration("45d")
      && not merge_request.has_label("do-not-close")
    then:
      - action: close
      - action: comment
        message: |
          Hello!

          This Merge Request have not seen any commit activity for 45 days. In an effort to keep our project clean we will automatically close the Merge request.

          You can add the "do-not-close" label to the Merge Request to disable this behavior.

  - name: Approve MR if the 'break-glass-approve' label is configured
    if: |
      merge_request.state != "closed"
      && not merge_request.approved
      && merge_request.has_label("break-glass-approve")
    then:
      - action: approve
      - action: comment
        message: "Approving the MR since it has the 'break-glass-approve' label. Talk to ITGC about this!"

label:
  - name: lang/go
    color: "$indigo"
    script: merge_request.modified_files("*.go")

  - name: lang/markdown
    color: "$indigo"
    description: "Modified MarkDown files"
    script: merge_request.modified_files("*.md")

  - name: dependencies/go
    color: "$orange"
    description: "Updated Go dependency files like go.mod and go.sum"
    script: merge_request.modified_files("go.mod", "go.sum")

  - name: type/ci
    color: "$green"
    description: "Modified CI files"
    script: merge_request.modified_files(".gitlab-ci.yml") || merge_request.modified_files("build/")

  - name: type/deployment
    color: "$green"
    description: "Modified Deployment files"
    script: merge_request.modified_files("_infrastructure/", "scripts/", "configs/")

  - name: type/documentation
    color: "$green"
    description: "Modified Documentation files"
    script: merge_request.modified_files("docs/")

  - name: type/services
    color: "$green"
    description: "Modified pkg/services files"
    script: merge_request.modified_files("internal/pkg/services")

  - name: go::tests::missing
    color: "$red"
    description: "The Merge Request did NOT modify Go test files"
    priority: 999
    script: not merge_request.modified_files("*_test.go") && merge_request.modified_files("*.go")

  - name: go::tests::OK
    color: "$green"
    description: "The Merge Request modified Go test files"
    priority: 999
    script: merge_request.modified_files("*_test.go") && merge_request.modified_files("*.go")

  - name: status::age::abandoned
    color: "$red"
    description: "The most recent commit is older than 45 days"
    priority: 999
    script: merge_request.time_since_last_commit > duration("45d")
    skip_if: merge_request.state in ["merged", "closed", "locked"]

  - name: status::age::stale
    color: "$red"
    description: "The most recent commit is older than 30 days"
    priority: 999
    script: duration("30d") < merge_request.time_since_last_commit < duration("45d")
    skip_if: merge_request.state in ["merged", "closed", "locked"]

  - name: status::age::old
    color: "$red"
    description: "The most recent commit is older than 14 days"
    priority: 999
    script: duration("14d") < merge_request.time_since_last_commit < duration("30d")
    skip_if: merge_request.state in ["merged", "closed", "locked"]

  # generate labels for services
  #
  # internal/service/vault/client.go
  # =>
  # service/vault
  - strategy: generate
    description: "Modified this a service directory"
    color: "$pink"
    script: >
      merge_request.modified_files_list("internal/service/")
      | map({ filepath_dir(#) })
      | map({ trimPrefix(#, "internal/") })
      | uniq()

  # generate labels for commands
  #
  # internal/app/my-command/subcommands/aws/login/login.go
  # =>
  # command/aws/login
  - strategy: generate
    description: "Modified this my-command command"
    color: "$purple"
    script: >
      merge_request.modified_files_list("internal/app/my-command/subcommands/")
      | map({ filepath_dir(#) })
      | map({ trimPrefix(#, "internal/app/my-command/subcommands/") })
      | map({ string("command/" + #) })
      | uniq()
